// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PolicyManagement.Models;
using System;

namespace PolicyManagement.Migrations
{
    [DbContext(typeof(PolicyWorkflowContext))]
    partial class PolicyWorkflowContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PolicyManagement.Models.Actions", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ADesc");

                    b.Property<string>("ATitle");

                    b.Property<string>("Departments");

                    b.Property<string>("Inputs");

                    b.Property<bool>("IsSRSAffected");

                    b.Property<string>("Outputs");

                    b.Property<int>("ProcessId");

                    b.HasKey("ActionId");

                    b.HasIndex("ProcessId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("PolicyManagement.Models.Incident", b =>
                {
                    b.Property<int>("IncidentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActualOutcome");

                    b.Property<string>("ChangedExpectation");

                    b.Property<string>("ExpectedOutcome");

                    b.Property<string>("FiledBy");

                    b.Property<DateTime>("FiledOn");

                    b.Property<string>("FilerFeedback");

                    b.Property<string>("FixStatus");

                    b.Property<string>("Issues");

                    b.Property<string>("NecessaryFix");

                    b.Property<string>("RootCause");

                    b.Property<string>("StepsTaken");

                    b.Property<string>("Title");

                    b.HasKey("IncidentId");

                    b.ToTable("Incident");
                });

            modelBuilder.Entity("PolicyManagement.Models.Policy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Administrator");

                    b.Property<string>("AdvisoryCommittee");

                    b.Property<string>("AmendAuth");

                    b.Property<DateTime>("AmendDate");

                    b.Property<DateTime>("ApprDate");

                    b.Property<string>("ApprovalAuthority");

                    b.Property<string>("Notes");

                    b.Property<DateTime>("NxtReviewDate");

                    b.Property<string>("OrigApprAuth");

                    b.Property<string>("PDescription");

                    b.Property<string>("PScope");

                    b.Property<string>("PTitle");

                    b.HasKey("PolicyId");

                    b.ToTable("Policy");
                });

            modelBuilder.Entity("PolicyManagement.Models.Procedure", b =>
                {
                    b.Property<int>("ProcedureId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PolicyId");

                    b.Property<string>("PrDesc");

                    b.Property<string>("PrPurpose");

                    b.Property<string>("PrTitle");

                    b.HasKey("ProcedureId");

                    b.HasIndex("PolicyId");

                    b.ToTable("Procedure");
                });

            modelBuilder.Entity("PolicyManagement.Models.Process", b =>
                {
                    b.Property<int>("ProcessId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ProcDesc");

                    b.Property<string>("ProcTitle");

                    b.Property<int>("ProcedureId");

                    b.HasKey("ProcessId");

                    b.HasIndex("ProcedureId");

                    b.ToTable("Process");
                });

            modelBuilder.Entity("PolicyManagement.Models.Actions", b =>
                {
                    b.HasOne("PolicyManagement.Models.Process", "Process")
                        .WithMany("Actions")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PolicyManagement.Models.Procedure", b =>
                {
                    b.HasOne("PolicyManagement.Models.Policy", "Policy")
                        .WithMany("Procedures")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PolicyManagement.Models.Process", b =>
                {
                    b.HasOne("PolicyManagement.Models.Procedure", "Procedure")
                        .WithMany("Processes")
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
